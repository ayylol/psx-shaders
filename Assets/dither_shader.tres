[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

const float M22[] = {
	-.25,	+.25,
	+.50,	+.00
	};
const int M22_row_size = 2;
const float M44[] = {
	-.5000,	+.0000,	-.3750,	+.1250,
	+.2500,	-.2500,	+.3750,	-.1250,
	-.3125,	+.1875,	-.4375,	+.0625,
	+.4375,	-.0625,	+.3125,	-.1875
	};
const int M44_row_size = 4;

uniform int color_space_size = 32;
uniform float normalize_dither = 0.05;

void fragment(){
	float css_f = float(color_space_size);
	vec3 col =  texture(TEXTURE, UV).xyz;
	col = round((col + normalize_dither*M44[int(UV.x / TEXTURE_PIXEL_SIZE.x)%M44_row_size + (int(UV.y / TEXTURE_PIXEL_SIZE.y) %M44_row_size)*M44_row_size]) * css_f) / css_f;
	COLOR = vec4(col,1.f);
}"
